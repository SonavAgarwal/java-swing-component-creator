{"version":3,"file":"commons-be096f5bc903892e584d.js","mappings":"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","sources":["webpack://java-swing-component-creator/./node_modules/refractor/lang/basic.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/c.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/clike.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/cpp.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/css.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/java.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/javascript.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/jsx.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/markup-templating.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/markup.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/php.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/ruby.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/sql.js","webpack://java-swing-component-creator/./node_modules/refractor/lang/typescript.js"],"sourcesContent":["'use strict';\n\nmodule.exports = basic;\nbasic.displayName = 'basic';\nbasic.aliases = [];\n\nfunction basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n      greedy: true\n    },\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  };\n}","'use strict';\n\nmodule.exports = c;\nc.displayName = 'c';\nc.aliases = [];\n\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n    number: /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n  });\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight the path of the include statement as a string\n        string: {\n          pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n          lookbehind: true\n        },\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    },\n    // highlight predefined macros as constants\n    constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n  });\n  delete Prism.languages.c['boolean'];\n}","'use strict';\n\nmodule.exports = clike;\nclike.displayName = 'clike';\nclike.aliases = [];\n\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nvar refractorC = require('./c.js');\n\nmodule.exports = cpp;\ncpp.displayName = 'cpp';\ncpp.aliases = [];\n\nfunction cpp(Prism) {\n  Prism.register(refractorC);\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': {\n      pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n    number: {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,\n      greedy: true\n    },\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    boolean: /\\b(?:true|false)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n}","'use strict';\n\nmodule.exports = css;\ncss.displayName = 'css';\ncss.aliases = [];\n\nfunction css(Prism) {\n  ;\n\n  (function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /@[\\w-]+/ // See rest below\n\n        }\n      },\n      url: {\n        pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/\n        }\n      },\n      selector: RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n      important: /!important\\b/i,\n      function: /[-a-z0-9]+(?=\\()/i,\n      punctuation: /[(){};:,]/\n    };\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n    var markup = Prism.languages.markup;\n\n    if (markup) {\n      markup.tag.addInlined('style', 'css');\n      Prism.languages.insertBefore('inside', 'attr-value', {\n        'style-attr': {\n          pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n          inside: {\n            'attr-name': {\n              pattern: /^\\s*style/i,\n              inside: markup.tag.inside\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n              pattern: /.+/i,\n              inside: Prism.languages.css\n            }\n          },\n          alias: 'language-css'\n        }\n      }, markup.tag);\n    }\n  })(Prism);\n}","'use strict';\n\nmodule.exports = java;\njava.displayName = 'java';\njava.aliases = [];\n\nfunction java(Prism) {\n  ;\n\n  (function (Prism) {\n    var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\n\n    var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n    Prism.languages.java = Prism.languages.extend('clike', {\n      'class-name': [className, // variables and parameters\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n      keyword: keywords,\n      function: [Prism.languages.clike.function, {\n        pattern: /(\\:\\:)[a-z_]\\w*/,\n        lookbehind: true\n      }],\n      number: /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    });\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        alias: 'punctuation',\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true\n      },\n      namespace: {\n        pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      generics: {\n        pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = javascript;\njavascript.displayName = 'javascript';\njavascript.aliases = ['js'];\n\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [Prism.languages.clike['class-name'], {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n      lookbehind: true\n    }],\n    keyword: [{\n      pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n      lookbehind: true\n    }],\n    number: /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n  });\n  Prism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [{\n      pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  });\n  Prism.languages.insertBefore('javascript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\${|}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript');\n  }\n\n  Prism.languages.js = Prism.languages.javascript;\n}","'use strict';\n\nmodule.exports = jsx;\njsx.displayName = 'jsx';\njsx.aliases = [];\n\nfunction jsx(Prism) {\n  ;\n\n  (function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript);\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n    Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n    Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n    Prism.languages.insertBefore('inside', 'attr-name', {\n      spread: {\n        pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n        inside: {\n          punctuation: /\\.{3}|[{}.]/,\n          'attr-value': /\\w+/\n        }\n      }\n    }, Prism.languages.jsx.tag);\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      script: {\n        // Allow for two levels of nesting\n        pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n        inside: {\n          'script-punctuation': {\n            pattern: /^=(?={)/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.jsx\n        },\n        alias: 'language-javascript'\n      }\n    }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n    var stringifyToken = function stringifyToken(token) {\n      if (!token) {\n        return '';\n      }\n\n      if (typeof token === 'string') {\n        return token;\n      }\n\n      if (typeof token.content === 'string') {\n        return token.content;\n      }\n\n      return token.content.map(stringifyToken).join('');\n    };\n\n    var walkTokens = function walkTokens(tokens) {\n      var openedTags = [];\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        var notTagNorBrace = false;\n\n        if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {// Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                });\n              }\n            }\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++;\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--;\n          } else {\n            notTagNorBrace = true;\n          }\n        }\n\n        if (notTagNorBrace || typeof token === 'string') {\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token); // And merge text with adjacent text\n\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n              plainText += stringifyToken(tokens[i + 1]);\n              tokens.splice(i + 1, 1);\n            }\n\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\n              tokens.splice(i - 1, 1);\n              i--;\n            }\n\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n          }\n        }\n\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content);\n        }\n      }\n    };\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return;\n      }\n\n      walkTokens(env.tokens);\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = markupTemplating;\nmarkupTemplating.displayName = 'markupTemplating';\nmarkupTemplating.aliases = [];\n\nfunction markupTemplating(Prism) {\n  ;\n\n  (function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___';\n    }\n\n    Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function value(env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return;\n          }\n\n          var tokenStack = env.tokenStack = [];\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match;\n            }\n\n            var i = tokenStack.length;\n            var placeholder; // Check for existing strings\n\n            while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n              ++i;\n            } // Create a sparse array\n\n\n            tokenStack[i] = match;\n            return placeholder;\n          }); // Switch the grammar to markup\n\n          env.grammar = Prism.languages.markup;\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function value(env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return;\n          } // Switch the grammar back\n\n\n          env.grammar = Prism.languages[language];\n          var j = 0;\n          var keys = Object.keys(env.tokenStack);\n\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break;\n              }\n\n              var token = tokens[i];\n\n              if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n                var k = keys[j];\n                var t = env.tokenStack[k];\n                var s = typeof token === 'string' ? token : token.content;\n                var placeholder = getPlaceholder(language, k);\n                var index = s.indexOf(placeholder);\n\n                if (index > -1) {\n                  ++j;\n                  var before = s.substring(0, index);\n                  var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                  var after = s.substring(index + placeholder.length);\n                  var replacement = [];\n\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]));\n                  }\n\n                  replacement.push(middle);\n\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]));\n                  }\n\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                  } else {\n                    token.content = replacement;\n                  }\n                }\n              } else if (token.content\n              /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content);\n              }\n            }\n\n            return tokens;\n          }\n\n          walkTokens(env.tokens);\n        }\n      }\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = markup;\nmarkup.displayName = 'markup';\nmarkup.aliases = ['xml', 'html', 'mathml', 'svg'];\n\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/i,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n          inside: {\n            punctuation: [/^=/, {\n              pattern: /^(\\s*)[\"']|[\"']$/,\n              lookbehind: true\n            }]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: /&#?[\\da-z]{1,8};/i\n  };\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&');\n    }\n  });\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {};\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      };\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      };\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      };\n      var def = {};\n      def[tagName] = {\n        pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      };\n      Prism.languages.insertBefore('markup', 'cdata', def);\n    }\n  });\n  Prism.languages.xml = Prism.languages.extend('markup', {});\n  Prism.languages.html = Prism.languages.markup;\n  Prism.languages.mathml = Prism.languages.markup;\n  Prism.languages.svg = Prism.languages.markup;\n}","'use strict';\n\nvar refractorMarkupTemplating = require('./markup-templating.js');\n\nmodule.exports = php;\nphp.displayName = 'php';\nphp.aliases = [];\n\nfunction php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   *\n   * Supports the following:\n   *      - Extends clike syntax\n   *      - Support for PHP 5.3+ (namespaces, traits, generators, etc)\n   *      - Smarter constant and function matching\n   *\n   * Adds the following new token classes:\n   *      constant, delimiter, variable, function, package\n   */\n  ;\n\n  (function (Prism) {\n    Prism.languages.php = Prism.languages.extend('clike', {\n      keyword: /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n      boolean: {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'constant'\n      },\n      constant: [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      }\n    });\n    Prism.languages.insertBefore('php', 'string', {\n      'shell-comment': {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      }\n    });\n    Prism.languages.insertBefore('php', 'comment', {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      }\n    });\n    Prism.languages.insertBefore('php', 'keyword', {\n      variable: /\\$+(?:\\w+\\b|(?={))/i,\n      package: {\n        pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      }\n    }); // Must be defined after the function pattern\n\n    Prism.languages.insertBefore('php', 'operator', {\n      property: {\n        pattern: /(->)[\\w]+/,\n        lookbehind: true\n      }\n    });\n    var string_interpolation = {\n      pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.php\n      }\n    };\n    Prism.languages.insertBefore('php', 'string', {\n      'nowdoc-string': {\n        pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      'heredoc-string': {\n        pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation // See below\n\n        }\n      },\n      'single-quoted-string': {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          interpolation: string_interpolation // See below\n\n        }\n      }\n    }); // The different types of PHP strings \"replace\" the C-like standard string\n\n    delete Prism.languages.php['string'];\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return;\n      }\n\n      var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/gi;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = ruby;\nruby.displayName = 'ruby';\nruby.aliases = ['rb'];\n\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *      constant, builtin, variable, symbol, regex\n   */\n  ;\n\n  (function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: [/#.*/, {\n        pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      }],\n      keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n    });\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.ruby\n      }\n    };\n    delete Prism.languages.ruby.function;\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      regex: [{\n        pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        // Here we need to specifically allow interpolation\n        pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      }],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: {\n        pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        lookbehind: true\n      },\n      'method-definition': {\n        pattern: /(\\bdef\\s+)[\\w.]+/,\n        lookbehind: true,\n        inside: {\n          function: /\\w+$/,\n          rest: Prism.languages.ruby\n        }\n      }\n    });\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n    });\n    Prism.languages.ruby.string = [{\n      pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      // Here we need to specifically allow interpolation\n      pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }];\n    Prism.languages.rb = Prism.languages.ruby;\n  })(Prism);\n}","'use strict';\n\nmodule.exports = sql;\nsql.displayName = 'sql';\nsql.aliases = [];\n\nfunction sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [{\n      pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n      greedy: true\n    }, /@[\\w.$]+/],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:TRUE|FALSE|NULL)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n    operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  };\n}","'use strict';\n\nmodule.exports = typescript;\ntypescript.displayName = 'typescript';\ntypescript.aliases = ['ts'];\n\nfunction typescript(Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    keyword: /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n    builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n}"],"names":["basic","Prism","languages","comment","pattern","inside","keyword","string","greedy","number","function","operator","punctuation","module","exports","displayName","aliases","c","extend","lookbehind","insertBefore","macro","alias","directive","constant","clike","boolean","refractorC","cpp","register","css","atrule","rule","url","RegExp","source","selector","property","important","rest","markup","tag","addInlined","java","keywords","className","annotation","namespace","generics","javascript","regex","parameter","interpolation","js","jsx","util","clone","spread","script","stringifyToken","token","content","map","join","walkTokens","tokens","openedTags","i","length","notTagNorBrace","type","tagName","pop","push","openedBraces","plainText","splice","Token","hooks","add","env","language","markupTemplating","getPlaceholder","index","toUpperCase","Object","defineProperties","buildPlaceholders","value","placeholderPattern","replaceFilter","tokenStack","code","replace","match","placeholder","indexOf","grammar","tokenizePlaceholders","j","keys","k","t","s","before","substring","middle","tokenize","after","replacement","apply","concat","prolog","doctype","cdata","entity","attributes","defineProperty","lang","includedCdataInside","def","xml","html","mathml","svg","refractorMarkupTemplating","php","delimiter","variable","package","string_interpolation","test","ruby","symbol","builtin","rb","sql","typescript","ts"],"sourceRoot":""}